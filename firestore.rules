rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isRecruiter() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'recruiter';
    }

    function isJobSeeker() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'job_seeker';
    }

    function hasRole(role) {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    function isValidPhoneNumber(phone) {
      return phone.matches('^\\+?[\\d\\s-]{10,}$');
    }

    function isValidEmail(email) {
      return email.matches('^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$');
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isOwner(userId);
      allow delete: if false;
    }

    // Resumes collection
    match /resumes/{resumeId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isOwner(resource.data.userId);
      allow delete: if isOwner(resource.data.userId);
    }

    // Jobs collection
    match /jobs/{jobId} {
      allow read: if isAuthenticated() && (
        isJobSeeker() || 
        (isRecruiter() && request.auth.uid == resource.data.recruiterId)
      );
      allow create: if isRecruiter() && request.resource.data.recruiterId == request.auth.uid;
      allow update: if isRecruiter() && request.auth.uid == resource.data.recruiterId;
      allow delete: if isRecruiter() && request.auth.uid == resource.data.recruiterId;
    }

    // Job postings collection
    match /job_postings/{jobId} {
      allow read: if isAuthenticated();
      allow create: if isRecruiter();
      allow update: if isRecruiter() && isOwner(resource.data.recruiterId);
      allow delete: if isRecruiter() && isOwner(resource.data.recruiterId);
    }

    // Applications collection
    match /applications/{applicationId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == resource.data.applicantId || 
        (isRecruiter() && (
          resource.data.recruiterId == request.auth.uid ||
          exists(/databases/$(database)/documents/job_postings/$(resource.data.jobId)) &&
          get(/databases/$(database)/documents/job_postings/$(resource.data.jobId)).data.recruiterId == request.auth.uid
        ))
      );
      allow create: if isAuthenticated() && 
        request.resource.data.applicantId == request.auth.uid;
      allow update: if isAuthenticated() && (
        request.auth.uid == resource.data.applicantId ||
        (isRecruiter() && (
          resource.data.recruiterId == request.auth.uid ||
          exists(/databases/$(database)/documents/job_postings/$(resource.data.jobId)) &&
          get(/databases/$(database)/documents/job_postings/$(resource.data.jobId)).data.recruiterId == request.auth.uid
        ))
      );
      allow delete: if false;
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 